//##########################################################################
//#                                                                        #
//#                              CLOUDCOMPARE                              #
//#                                                                        #
//#  This program is free software; you can redistribute it and/or modify  #
//#  it under the terms of the GNU General Public License as published by  #
//#  the Free Software Foundation; version 2 or later of the License.      #
//#                                                                        #
//#  This program is distributed in the hope that it will be useful,       #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of        #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the          #
//#  GNU General Public License for more details.                          #
//#                                                                        #
//#          COPYRIGHT: EDF R&D / TELECOM ParisTech (ENST-TSI)             #
//#                                                                        #
//##########################################################################

#ifndef CC_LAS_OPEN_DIALOG
#define CC_LAS_OPEN_DIALOG

#include "LASDetails.h"

// GUIs generated by Qt Designer
#include <ui_lasopendialog.h>

// system
#include <string>
#include <vector>

// CCCoreLib
#include <CCGeom.h>

//! Dialog to choose the LAS fields to load
class LASOpenDialog : public QDialog, public Ui::LASOpenDialog
{
    Q_OBJECT

  public:
    //! Default constructor
    explicit LASOpenDialog(QWidget *parent = nullptr);

    void setInfo(int versionMinor, int pointFormatId, int64_t numPoints)
    {
        QString num;
        num.reserve(15);
        while (numPoints != 0) {
            num.prepend(QString::number(numPoints % 1000).rightJustified(3, '0'));
            num.prepend(" ");
            numPoints /= 1'000;
        }

        versionLabelValue->setText(QString("1.%1").arg(QString::number(versionMinor)));
        pointFormatLabelValue->setText(QString::number(pointFormatId));
        numPointsLabelValue->setText(num);
    }

    void setAvailableScalarFields(const std::vector<LasScalarField>& scalarFields);
    bool isChecked(const LasScalarField& lasScalarField) const;
};

#endif // CC_LAS_OPEN_DIALOG
